{
    "success": false,
    "response": {
        "message": "Logs were not verified successfully",
        "report": {
            "on_search_full_catalog_refresh": {
                "schemaErr0": "/message/catalog/bpp~1providers/0/categories/0/id categories.id should be alphanumeric and upto 12 characters",
                "schemaErr1": "/message/catalog/bpp~1providers/0/categories/1/id categories.id should be alphanumeric and upto 12 characters",
                "schemaErr2": "/message/catalog/bpp~1providers/0/categories/2/id categories.id should be alphanumeric and upto 12 characters",
                "schemaErr3": "/message/catalog/bpp~1providers/0/categories/3/id categories.id should be alphanumeric and upto 12 characters",
                "schemaErr4": "/message/catalog/bpp~1providers/0/categories/4/id categories.id should be alphanumeric and upto 12 characters",
                "schemaErr5": "/message/catalog/bpp~1providers/0/categories/5/id categories.id should be alphanumeric and upto 12 characters",
                "schemaErr6": "/message/catalog/bpp~1providers/0/categories/6/id categories.id should be alphanumeric and upto 12 characters",
                "message/catalog/bpp/providers0/categories/items": "No items are mapped with the given category_id cRETHIP in providers0/items"
            },
            "on_init": {
                "quantErr": "Extra attribute Quantity provided in quote object i.e not supposed to be provided after on_select so invalid quote object"
            },
            "confirm": {
                "quantErr": "Extra attribute Quantity provided in quote object i.e not supposed to be provided after on_select so invalid quote object"
            },
            "on_confirm": {
                "message.order.tags[0].list": "Pan_id shouldn't be same in tax_number and provider_tax_number in message.order.tags[0].list"
            },
            "on_update_part_cancel": {
                "invldQuoteTrailPrices": "quote_trail price and item quote price sum for on_update should be equal to the price as in on_confirm"
            },
            "on_status_pending": {
                "schemaErr0": "/message/order/fulfillments/1/tags must NOT have fewer than 2 items"
            },
            "on_status_packed": {
                "schemaErr0": "/message/order/fulfillments/1/tags must NOT have fewer than 2 items",
                "on_status_packed_msgId": "Message id should not be same with previous calls",
                "tmpstmp1": "Timestamp for /on_confirm api cannot be greater than or equal to /on_status_packed api",
                "tmpstmp2": " order.updated_at timestamp should be less than or eqaul to  context timestamp for /on_status_packed api",
                "message/order.fulfillments/0/tags/0": "Mismatch occurred while comparing 'Cancel' fulfillment object with on_update_part_cancel on key 'tags/0'",
                "message/order.fulfillments/0/tags/1": "Mismatch occurred while comparing 'Cancel' fulfillment object with on_update_part_cancel on key 'tags/1'"
            },
            "on_status_picked": {
                "schemaErr0": "/message/order/fulfillments/1/tags must NOT have fewer than 2 items",
                "on_status_picked_msgId": "Message id should not be same with previous calls",
                "inVldTmstmp": "Timestamp in previous /on_status api cannot be greater than or equal to /on_status_picked api",
                "tmpstmp1": "Timestamp for /on_confirm api cannot be greater than or equal to /on_status_picked api",
                "tmpstmp2": " order.updated_at timestamp should be less than or eqaul to  context timestamp for /on_status_picked api",
                "pickupTime": "pickup timestamp should match context/timestamp and can't be future dated",
                "updatedAtTime": "order/updated_at timestamp can't be future dated (should match context/timestamp)",
                "message/order.fulfillments/0/tags/0": "Mismatch occurred while comparing 'Cancel' fulfillment object with on_update_part_cancel on key 'tags/0'",
                "message/order.fulfillments/0/tags/1": "Mismatch occurred while comparing 'Cancel' fulfillment object with on_update_part_cancel on key 'tags/1'"
            },
            "on_status_out_for_delivery": {
                "schemaErr0": "/message/order/fulfillments/1/tags must NOT have fewer than 2 items",
                "on_status_out_for_delivery_msgId": "Message id should not be same with previous calls",
                "invalid_message_id": "Message_id cannot be same for on_status.packed and on_status.out_for_delivery",
                "noOrdrOut_for_delivery": "fulfillments/state Should be out-for-delivery for /on_status_Out-for-delivery",
                "message/order.fulfillments/0/tags/0": "Mismatch occurred while comparing 'Cancel' fulfillment object with on_update_part_cancel on key 'tags/0'",
                "message/order.fulfillments/0/tags/1": "Mismatch occurred while comparing 'Cancel' fulfillment object with on_update_part_cancel on key 'tags/1'"
            },
            "on_status_delivered": {
                "schemaErr0": "/message/order/fulfillments/1/tags must NOT have fewer than 2 items",
                "on_status_delivered_msgId": "Message id should not be same with previous calls",
                "tmpstmp1": "Timestamp for /on_confirm api cannot be greater than or equal to /on_status_delivered api",
                "tmpstmp2": " order.updated_at timestamp should be less than or eqaul to  context timestamp for /on_status_delivered api",
                "ordrState": "order/state should be \"Completed\" for /on_status_delivered",
                "delPickTime": "delivery timestamp (/end/time/timestamp) can't be less than or equal to the pickup timestamp (start/time/timestamp)",
                "updatedAtTime": "order/updated_at timestamp can't be future dated (should match context/timestamp)",
                "message/order.fulfillments/0/tags/0": "Mismatch occurred while comparing 'Cancel' fulfillment object with on_update_part_cancel on key 'tags/0'",
                "message/order.fulfillments/0/tags/1": "Mismatch occurred while comparing 'Cancel' fulfillment object with on_update_part_cancel on key 'tags/1'"
            },
            "update_reverse_qc": "Missing required data of : update_reverse_qc",
            "on_update_interim_reverse_qc": "Missing required data of : on_update_interim_reverse_qc",
            "on_update_approval": "Missing required data of : on_update_approval",
            "on_update_picked": "Missing required data of : on_update_picked",
            "update_settlement_reverse_qc": "Missing required data of : update_settlement_reverse_qc",
            "on_update_delivered": "Missing required data of : on_update_delivered",
            "update_liquidated": {
                "update_liquidated_msgId": "Message id should not be same with previous calls"
            },
            "on_update_interim_liquidated": {
                "on_update_interim_liquidated_msgId": "Message Ids for  /update_liquidated and /on_update_interim_liquidated api should be same",
                "invldQuotePrices": "Item quote breakup prices for /on_update_interim_liquidated should be equal to the net price.",
                "message/order.fulfillments/Cancel": "Fulfillments/Cancel is missing in on_update_interim_liquidated"
            },
            "on_update_liquidated": {
                "invldQuotePrices": "Item quote breakup prices for /on_update_liquidated should be equal to the net price.",
                "context/timestamp/": "context/timestamp of /on_update_liquidated should be greater than context/timestamp of /on_update_interim_liquidated",
                "message/order.fulfillments/Cancel": "Fulfillments/Cancel is missing in on_update_liquidated"
            }
        },
        "bpp_id": "seller.dhihyperlocal.com",
        "bap_id": "buyer-app-preprod-v2.ondc.org",
        "domain": "ONDC:RET11",
        "reportTimestamp": "2025-01-24T13:11:40.218Z"
    },
    "signature": "MECkpQzbDH6zId510qi91MutjR9K5mJ7pILvvOceOSS95SeYcYT9l+wCUc4EhZCOkJABCBm9dbdPIPFhfwzNCA==",
    "signTimestamp": "2025-01-24T13:11:40.218Z"
}