{
  "success": false,
  "response": {
    "message": "Logs were not verified successfully",
    "report": {
      "search_full_catalog_refresh": {
        "schemaErr0": "/message/intent/payment/@ondc~1org~1buyer_app_finder_fee_type must be equal to constant (percent)"
      },
      "on_search_full_catalog_refresh": {
        "schemaErr0": "/message/catalog must have required property 'bpp/fulfillments'",
        "bpp/descriptor/accept_bap_terms": "accept_bap_terms is not required in bpp/descriptor/tags for now ",
        "bpp/descriptor/collect_payment": "collect_payment is not required in bpp/descriptor/tags for now ",
        "prvdr0loctime0": "Either one of fixed (range) or split (frequency and times) timings should be provided in /bpp/providers[0]/locations[0]/time",
        "prvdr0item0ff": "fulfillment_id in /bpp/providers[0]/items[0] should map to one of the fulfillments id in bpp/fulfillments",
        "prvdr0item1ff": "fulfillment_id in /bpp/providers[0]/items[1] should map to one of the fulfillments id in bpp/fulfillments",
        "prvdr0item2ff": "fulfillment_id in /bpp/providers[0]/items[2] should map to one of the fulfillments id in bpp/fulfillments",
        "prvdr0item3ff": "fulfillment_id in /bpp/providers[0]/items[3] should map to one of the fulfillments id in bpp/fulfillments",
        "prvdr0item4ctgryseq0": "duplicate seq : 2 in category_ids in prvdr0item4",
        "prvdr0item4ff": "fulfillment_id in /bpp/providers[0]/items[4] should map to one of the fulfillments id in bpp/fulfillments",
        "prvdr0item5ctgryseq0": "duplicate seq : 2 in category_ids in prvdr0item5",
        "prvdr0item5ff": "fulfillment_id in /bpp/providers[0]/items[5] should map to one of the fulfillments id in bpp/fulfillments",
        "prvdr0item6ff": "fulfillment_id in /bpp/providers[0]/items[6] should map to one of the fulfillments id in bpp/fulfillments",
        "prvdr1item0ff": "fulfillment_id in /bpp/providers[1]/items[0] should map to one of the fulfillments id in bpp/fulfillments",
        "prvdr1tags4": "serviceability construct /bpp/providers[1]/tags[4] should be defined as per the API contract",
        "prvdr1tags4type": "serviceability construct /bpp/providers[1]/tags[4] should be defined as per the API contract (invalid type \"13\")",
        "prvdr1tags8": "serviceability construct /bpp/providers[1]/tags[8] should be defined as per the API contract",
        "prvdr1tags8type": "serviceability construct /bpp/providers[1]/tags[8] should be defined as per the API contract (invalid type \"13\")"
      },
      "search_inc_refresh": {
        "schemaErr0": "/message/intent/payment/@ondc~1org~1buyer_app_finder_fee_type must be equal to constant (percent)",
        "contextCityError": "context/city should be \"*\" while sending search_inc_catalog request"
      },
      "on_search_inc_refresh": {
        "schemaErr0": "/message/catalog/bpp~1providers/0/items/7/quantity/unitized/measure/unit must be equal to one of the allowed values (unit,dozen,gram,kilogram,tonne,litre,millilitre)",
        "city": "context/city should be \"*\" in  /on_search_inc_refresh ",
        "bppDescriptor": "bpp/descriptor sent in payload shoulnd't be part of /on_search_inc_refresh api",
        "prvdr0loctime0": "Either one of fixed (range) or split (frequency and times) timings should be provided in /bpp/providers[0]/locations[0]/time",
        "locationTimeLabel": "location label (/bpp/providers/locations/time/label) for /on_search_inc_refresh should not be equal to /on_search_full_catalog_refresh.label"
      }
    },
    "bpp_id": "pramaan.ondc.org/alpha/mock-server",
    "bap_id": "api.bestup.in",
    "domain": "ONDC:RET10",
    "reportTimestamp": "2024-05-09T07:14:46.919Z"
  },
  "signature": "KhpehBqSdS/jC9JN9+AhfqR9TIZ1ptSxEM6/xbC+zeIKxMH7uqMmKiz85CtzfSzSQ8ZSSVFVOg3XZyUcUlTgDA==",
  "signTimestamp": "2024-05-09T07:14:46.919Z"
}